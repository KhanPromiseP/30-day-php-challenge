<?php

require 'logic.php';

$search = isset($_GET['search']) ? $_GET['search'] : '';
$filter = isset($_GET['filter']) ? $_GET['filter'] : 'all';
$sortBy = isset($_GET['sort']) ? $_GET['sort'] : 'date_added';

$tasks = getTasks($filter);
if (is_array($tasks)) {
    sortTasks($tasks, $sortBy);
} else {
    $tasks = [];
}

$index = $_GET[$index];
if (isset($_SESSION['tasks']) ? $_SESSION['tasks'] : []);
if (isset($_SESSION['tasks'])) {
    $tasks[$index]['completed'] = !$tasks[$index]['completed'];
    $_SESSION['tasks'] = $tasks;
}


$searchQuery = isset($_GET['search']) ? trim($_GET['search']) : '';

if ($searchQuery) {
    $tasks = array_filter($_SESSION['tasks'], function ($task) use ($searchQuery) {
        return stripos($task['name'], $searchQuery) !== false;
    });
} else {
    $tasks = $_SESSION['tasks'];
}


?>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Task Manager</title>
    <link rel="stylesheet" href="styles.css">
</head>
<main>

    <body>
        <div class="formcontainer">
            <header>
                <h1>To-do List</h1>
            </header>


            <!-- <form action="index.php" method="GET">
                <input type="text" name="search" placeholder="Search ..." value="<?= htmlspecialchars($searchQuery) ?>">
                <button type="submit">Search</button>
            </form> -->
        </div>
        <button id='btn'><a href="create.php"><abbr title="Create a task" id="create">+</abbr></a></button>

        <form method="GET" action="index.php">
            <div class="search-bar">
                <input type="text" name="search" placeholder="Search tasks..."
                    value="<?= htmlspecialchars($searchQuery) ?>">
                <button type="submit">Search</button>
            </div>
        </form>










        <form action="index.php" method="get">
            <div class="choose">
                <label for="filter">Filter:</label>
                <select id="filter" name="filter">
                    <option value="all" <?= $filter === 'all' ? 'selected' : '' ?>>All</option>
                    <option value="completed" <?= $filter === 'completed' ? 'selected' : '' ?>>Completed</option>
                    <option value="pending" <?= $filter === 'pending' ? 'selected' : '' ?>>Pending</option>
                </select>
                <label for="sort">Sort By:</label>
                <select id="sort" name="sort">
                    <option value="date_added" <?= $sortBy === 'date_added' ? 'selected' : '' ?>>Date Added</option>
                    <option value="deadline" <?= $sortBy === 'deadline' ? 'selected' : '' ?>>Deadline</option>
                    <option value="priority" <?= $sortBy === 'priority' ? 'selected' : '' ?>>Priority</option>
                </select>

                <button type="submit">Apply</button>
            </div>
        </form>

        <ul>
            <?php foreach ($tasks as $index => $task) : ?>
            <?php
                $priorityClass = '';
                switch ($task['priority']) {
                    case 'High':
                        $priorityClass = 'high-priority';
                        break;
                    case 'Medium':
                        $priorityClass = 'medium-priority';
                    case 'Low':
                        $priorityClass = 'low-priority';
                }
                // echo 'class=' . $priorityClass . ' ' . htmlspecialchars($task['name']);
                ?>
            <?php
                // $priorityClass = strtolower($task['priority']) . '-priority';
                $isOverdue = strtotime($task['deadline']) < time() && !$task['completed'];
                ?>
            <li class="<?= $priorityClass ?> <?= $isOverdue ? 'overdue' : '' ?>">
                <?= htmlspecialchars($task['name']) ?>

                <?php $taskStyle = $task['completed'] ? 'text-decoration:line-through;' : '' ?>
                <form method='POST' action="index.php" style='display: inline' ;>
                    <input type='hidden' name="mark" value='<?= $index ?>'>
                    <button type="submit" style="<?= $taskStyle ?>">Mark</button>
                </form>
                <span class="<?php echo $task['completed'] ? 'completed-task' : 'uncompleted' ?>"></span>


                <button onclick="location.href='details.php?index=<?= $index ?>'">View </button>
                <button><a
                        href="deletetask.php?index=<?= $index ?>&filter=<?= $filter ?>&sort=<?= $sortBy ?>">Delete</a></button>
                <button><a href="update.php?index=<?= $index ?>">Edit</a></button>

            </li>
            </li>
            <?php endforeach; ?>

        </ul>

        </div>
    </body>















    <?php
session_start();


if (!isset($_SESSION['tasks'])) {
    if (isset($_COOKIE['tasks'])) {
        $_SESSION['tasks'] = unserialize($_COOKIE['tasks']);
    } else {
        $_SESSION['tasks'] = [];
    }
}

function createTask($name, $description, $priority, $deadline)
{
    $task = [
        'name' => $name,
        'description' => $description,
        'priority' => $priority,
        'deadline' => $deadline,
        'date_added' => date('Y-m-d'),
        'completed' => false,
    ];

    $_SESSION['tasks'][] = $task;
    updateCookie();
}

function updateTask($index, $name, $description, $priority, $deadline)
{
    if (isset($_SESSION['tasks'][$index])) {
        $_SESSION['tasks'][$index] = [
            'name' => $name,
            'description' => $description,
            'priority' => $priority,
            'deadline' => $deadline,
            'date_added' => $_SESSION['tasks'][$index]['date_added'],
            'completed' => $_SESSION['tasks'][$index]['completed'],
        ];

        updateCookie();
    }
}


function deleteTask($index)
{
    if (isset($_SESSION['tasks'][$index])) {
        unset($_SESSION['tasks'][$index]);
        $_SESSION['tasks'] = array_values($_SESSION['tasks']);
        updateCookie();
    }
}

function toggleTaskCompletion($index)
{
    if (isset($_SESSION['tasks'][$index])) {
        $_SESSION['tasks'][$index]['completed'] = !$_SESSION['tasks'][$index]['completed'];
        updateCookie();
    }
}



function markTaskComplete($index)
{
    // $tasks = loadTasks();

    if (isset($_SESSION['tasks'][$index])) {
        $_SESSION['tasks'][$index]['completed'] = true; // Mark the task as completed
        updateCookie();
    }
}



function getTasks($filter = 'all', $search = '')
{
    $tasks = $_SESSION['tasks'] ?? [];


    if ($filter === 'completed') {
        $tasks = array_filter($tasks, fn ($task) => $task['completed']);
    } elseif ($filter === 'pending') {
        $tasks = array_filter($tasks, fn ($task) => !$task['completed']);
    }


    if (!empty($search)) {
        $tasks = array_filter($tasks, function ($task) use ($search) {
            return stripos($task['name'], $search) !== false;
        });
    }

    return $tasks;
}


function sortTasks(&$tasks, $sortBy)
{
    if (is_array($tasks)) {
        usort($tasks, function ($a, $b) use ($sortBy) {
            switch ($sortBy) {
                case 'priority':
                    return strcmp($a['priority'], $b['priority']);
                case 'deadline':
                    return strcmp($a['deadline'], $b['deadline']);
                case 'date_added':
                    return strcmp($a['date_added'], $b['date_added']);
                default:
                    return 0;
            }
        });
    }
}


function updateCookie()
{
    setcookie('tasks', serialize($_SESSION['tasks']), time() + (86400 * 30), "/");
}


function clearAllTasks()
{
    $_SESSION['tasks'] = [];
    setcookie('tasks', '', time() - 3600, "/");
}

function getTask($index)
{
    return $_SESSION['tasks'][$index] ?? null;
}


</html>